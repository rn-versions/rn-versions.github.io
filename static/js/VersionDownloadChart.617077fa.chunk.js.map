{"version":3,"file":"static/js/VersionDownloadChart.617077fa.chunk.js","mappings":"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","sources":["chartColor.ts","styles/VersionDownloadChart.styles.ts","webpack://rn-version-tracker/./src/styles/VersionTooltip.module.scss?511e","components/VersionTooltip.tsx","webpack://rn-version-tracker/./src/styles/VersionLegend.module.scss?6397","components/VersionLegend.tsx","components/VersionDownloadChart.tsx"],"sourcesContent":["import seedRandom from \"seedrandom\";\n\nexport type AvoidToken = {\n  adjacentHue: number;\n  adjacentHue2?: number;\n  allHues: number[];\n};\n\nconst styles = {\n  againstDark: {\n    minLuminance: 0.3,\n  },\n  againstLight: {\n    maxLuminance: 0.3,\n  },\n  dark: {\n    saturation: 0.5,\n    defaultLightness: 0.5,\n  },\n  light: {\n    saturation: 0.7,\n    defaultLightness: 0.6,\n  },\n};\n\n/**\n * Generates a hue with random distribution, stable for a given semver\n * version. Allows passing an `avoidToken` generated by a previous color, to avoid a color similar\n * to it.\n */\nexport default function generateHue(\n  version: string,\n  avoidToken?: AvoidToken\n): { hue: number; avoidToken: AvoidToken } {\n  const rand = seedRandom.xor4096(version);\n  const minAdjacentDifference = 0.2;\n  const minAdjacent2Difference = 0.1;\n\n  let hue = 0.0;\n  let difference = 0.0;\n\n  if (!avoidToken) {\n    hue = rand();\n  } else {\n    for (let triesLeft = 10; triesLeft > 0; triesLeft--) {\n      let nextHue = rand();\n\n      while (\n        hueDifference(nextHue, avoidToken.adjacentHue) <\n          minAdjacentDifference ||\n        (avoidToken.adjacentHue2 !== undefined &&\n          hueDifference(nextHue, avoidToken.adjacentHue2) <\n            minAdjacent2Difference)\n      ) {\n        nextHue = rand();\n      }\n\n      let nextHueDifference = 1.0;\n\n      for (const otherHue of avoidToken.allHues) {\n        const differenceToOther = hueDifference(nextHue, otherHue);\n        if (differenceToOther < nextHueDifference) {\n          nextHueDifference = differenceToOther;\n        }\n      }\n\n      if (nextHueDifference > difference) {\n        hue = nextHue;\n        difference = nextHueDifference;\n      }\n    }\n  }\n\n  return {\n    hue: hue * 360,\n    avoidToken: {\n      adjacentHue: hue,\n      adjacentHue2: avoidToken?.adjacentHue,\n      allHues: [...(avoidToken?.allHues ?? []), hue],\n    },\n  };\n}\n\nconst colorCache: Partial<\n  Record<\n    number,\n    Array<{\n      variant?: \"light\" | \"dark\";\n      targetLuminance?: \"contrasts-light\" | \"contrasts-dark\";\n      result: string;\n    }>\n  >\n> = {};\n\n/**\n * Calculates a color with the given hue, optionally specified to meet a\n * specific contrast requirement\n */\nexport function colorForHue(\n  hue: number,\n  opts?: {\n    variant?: \"light\" | \"dark\";\n    targetLuminance?: \"contrasts-light\" | \"contrasts-dark\";\n  }\n) {\n  const cacheEntry = colorCache[hue] ?? [];\n  for (const record of cacheEntry) {\n    if (\n      record.targetLuminance === opts?.targetLuminance &&\n      record.variant === opts?.variant\n    ) {\n      return record.result;\n    }\n  }\n\n  const saturation =\n    opts?.variant === \"dark\" ? styles.dark.saturation : styles.light.saturation;\n\n  const defaultLightness =\n    opts?.variant === \"dark\"\n      ? styles.dark.defaultLightness\n      : styles.light.defaultLightness;\n\n  const lightness = adjustLightnessForContrast(\n    defaultLightness,\n    hue,\n    saturation,\n    opts?.targetLuminance\n  );\n\n  const result = `hsl(${hue}, ${saturation * 100}%, ${lightness * 100}%)`;\n  cacheEntry.push({\n    variant: opts?.variant,\n    targetLuminance: opts?.targetLuminance,\n    result,\n  });\n  return result;\n}\n\nfunction hueDifference(hue1: number, hue2: number) {\n  const dist = Math.abs(hue1 - hue2) % 1.0;\n  return dist > 0.5 ? 1.0 - dist : dist;\n}\n\nfunction adjustLightnessForContrast(\n  lightness: number,\n  h: number,\n  s: number,\n  contrastingColor?: \"contrasts-light\" | \"contrasts-dark\"\n) {\n  if (contrastingColor === \"contrasts-light\") {\n    while (\n      relativeLuminance(h, s, lightness) > styles.againstLight.maxLuminance\n    ) {\n      lightness -= 0.02;\n    }\n  } else if (contrastingColor === \"contrasts-dark\") {\n    while (\n      relativeLuminance(h, s, lightness) < styles.againstDark.minLuminance\n    ) {\n      lightness += 0.02;\n    }\n  }\n\n  return lightness;\n}\n\n/**\n * Calculate the relative luminance which is how bright the color is from the perspective of\n * a human eye.  Blue is much darker than green for instance so (0, 0, 255) is perceived to be\n * significantly darker than (0, 255, 0).  This is used to calculate contrast ratios between\n * two colors to ensure text is readable.\n */\nexport function relativeLuminance(h: number, s: number, l: number): number {\n  const { r, g, b } = hsl2rgb(h, s, l);\n\n  // Formula defined by: http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html#contrast-ratiodef\n  // relative luminance: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n\n  // get the effective radius for each color\n  const r1 = standardToLinear(r / 255);\n  const g1 = standardToLinear(g / 255);\n  const b1 = standardToLinear(b / 255);\n\n  // relative luminance adjusts the R/G/B values by modifiers for their perceived brightness\n  // to produce lightness result for how the eye perceives the color\n  return 0.2126 * r1 + 0.7152 * g1 + 0.0722 * b1;\n}\n\n/**\n * Converts an r, g, or b value in the sRGB color space to the corresponding value in linearRGB\n * This is necessary for relative luminance calculations\n * Formula defined at https://en.wikipedia.org/wiki/SRGB\n *\n * @param c - one of r g or b coming from sRGB\n */\nfunction standardToLinear(c: number): number {\n  return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n}\n\nfunction hsl2rgb(\n  h: number,\n  s: number,\n  l: number\n): { r: number; g: number; b: number } {\n  const c: number = (1 - Math.abs(2 * l - 1)) * s;\n  const x: number = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m: number = l - c / 2;\n\n  let r1: number = 0;\n  let g1: number = 0;\n  let b1: number = 0;\n\n  // different values of h\n  if (h < 60) {\n    r1 = c;\n    g1 = x;\n    b1 = 0;\n  } else if (h < 120) {\n    r1 = x;\n    g1 = c;\n    b1 = 0;\n  } else if (h < 180) {\n    r1 = 0;\n    g1 = c;\n    b1 = x;\n  } else if (h < 240) {\n    r1 = 0;\n    g1 = x;\n    b1 = c;\n  } else if (h < 300) {\n    r1 = x;\n    g1 = 0;\n    b1 = c;\n  } else {\n    r1 = c;\n    g1 = 0;\n    b1 = x;\n  }\n\n  return {\n    r: Math.round(255 * (r1 + m)),\n    g: Math.round(255 * (g1 + m)),\n    b: Math.round(255 * (b1 + m)),\n  };\n}\n","import { ITheme } from \"@fluentui/react\";\n\nimport type {\n  AreaProps,\n  CartesianGridProps,\n  ResponsiveContainerProps,\n  TooltipProps,\n  XAxisProps,\n  YAxisProps,\n} from \"recharts\";\nimport { Unit } from \"../components/VersionDownloadChart\";\n\ntype AnimationProps =\n  | \"animationDuration\"\n  | \"animationEasing\"\n  | \"isAnimationActive\";\ntype DimensionProps = \"width\" | \"height\";\ntype PaddingProps = \"padding\";\ntype StrokeProps = \"stroke\" | \"strokeDasharray\" | \"strokeOpacity\";\ntype TickProps =\n  | \"tick\"\n  | \"tickCount\"\n  | \"tickLine\"\n  | \"tickSize\"\n  | \"tickMargin\"\n  | \"minTickGap\";\n\nexport type VersionDownloadChartStyle = (opts?: {\n  theme?: ITheme;\n  unit?: Unit;\n}) => {\n  areaChart: {\n    margin?: { top?: number; right?: number; bottom?: number; left?: number };\n  };\n  area: Pick<AreaProps, AnimationProps | DimensionProps>;\n  responsiveContainer: Pick<ResponsiveContainerProps, DimensionProps>;\n  grid: Pick<CartesianGridProps, DimensionProps | StrokeProps>;\n  xAxis: Pick<XAxisProps, DimensionProps | PaddingProps | TickProps>;\n  yAxis: Pick<YAxisProps, DimensionProps | PaddingProps | TickProps>;\n  tooltip: Pick<TooltipProps<string, number>, AnimationProps | \"offset\">;\n};\n\nconst styles: VersionDownloadChartStyle = ({ theme, unit } = {}) => ({\n  areaChart: {\n    margin: { top: 15, right: 28, bottom: 5 },\n  },\n  area: {\n    isAnimationActive: false,\n    stroke: theme?.isInverted\n      ? theme.palette.whiteTranslucent40\n      : theme?.palette.blackTranslucent40,\n  },\n  responsiveContainer: {\n    width: \"100%\",\n    height: 260,\n  },\n  grid: {\n    stroke: theme?.isInverted\n      ? theme.palette.whiteTranslucent40\n      : theme?.palette.blackTranslucent40,\n    strokeDasharray: \"1 1\",\n  },\n  xAxis: {\n    tickLine: false,\n    tickSize: 4,\n    tickMargin: 10,\n    tick: { fill: theme?.semanticColors.bodyText },\n  },\n  yAxis: {\n    tickLine: false,\n    tickMargin: 10,\n    tickSize: 0,\n    tickCount: 5,\n    width: 52,\n    tick: { fill: theme?.semanticColors.bodyText },\n  },\n  tooltip: {\n    animationDuration: 150,\n    animationEasing: \"linear\",\n    offset: 24,\n  },\n});\n\nexport default styles;\n","// extracted by mini-css-extract-plugin\nexport default {\"frame\":\"VersionTooltip_frame__mZVBJ\",\"date\":\"VersionTooltip_date__ejKCx\",\"versionsList\":\"VersionTooltip_versionsList__tB7yN\",\"versionsListItem\":\"VersionTooltip_versionsListItem__HAZpv\",\"versionLabel\":\"VersionTooltip_versionLabel__eA66Q\",\"versionCount\":\"VersionTooltip_versionCount__0B822\"};","import styles from \"../styles/VersionTooltip.module.scss\";\nimport { ITheme, Text, ThemeContext, ThemeProvider } from \"@fluentui/react\";\n\nimport { TooltipProps } from \"recharts\";\nimport { Unit } from \"./VersionDownloadChart\";\nimport type { Payload } from \"recharts/types/component/DefaultTooltipContent\";\nimport { colorForHue } from \"../chartColor\";\n\ntype DateTooltipProps = TooltipProps<number, number>;\n\nfunction formatCount(\n  count: number,\n  entry: Payload<number, number>,\n  measurementTransform: Unit | undefined\n): string {\n  const { versionCounts } = entry.payload as {\n    versionCounts: Record<string, number>;\n  };\n\n  const totalCount = Object.values(versionCounts).reduce((a, b) => a + b, 0);\n\n  const pct = ((count as number) / totalCount) * 100;\n\n  if (measurementTransform === \"percentage\") {\n    return `${Math.round(pct * 100) / 100}%`;\n  } else {\n    return `${count.toLocaleString()} (${Math.round(pct)}%)`;\n  }\n}\n\nfunction formatLabel(unixTime: number): string {\n  return new Date(unixTime).toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n  });\n}\n\nexport function createTooltipContent(\n  props: VersionProps\n): React.FC<DateTooltipProps> {\n  return (tooltipProps) => (\n    <VersionTooltipContent {...props} {...tooltipProps} />\n  );\n}\n\nexport type VersionProps = {\n  versionHues: Record<string, number>;\n  unit?: Unit;\n  theme?: ITheme;\n};\n\nexport const VersionTooltipContent: React.FC<\n  VersionProps & DateTooltipProps\n> = ({ label, payload, unit, versionHues, theme }) => {\n  const reversedItems = [...(payload ?? [])];\n  reversedItems.reverse();\n\n  return (\n    <ThemeContext.Consumer>\n      {(contextTheme) => {\n        theme = theme ?? contextTheme;\n\n        const versionsList = reversedItems.length > 0 && (\n          <ul className={styles.versionsList}>\n            {reversedItems.map((entry, i) => {\n              const colorChipColor = theme\n                ? colorForHue(\n                    versionHues[entry.name!],\n                    theme.isInverted\n                      ? { variant: \"dark\", targetLuminance: \"contrasts-dark\" }\n                      : { variant: \"light\", targetLuminance: \"contrasts-light\" }\n                  )\n                : entry.color;\n\n              const formattedValue = formatCount(entry.value!, entry, unit);\n\n              return (\n                <li key={i} className={styles.versionsListItem}>\n                  <Text\n                    variant=\"small\"\n                    className={styles.versionLabel}\n                    style={{ color: colorChipColor }}\n                  >\n                    {entry.name}\n                  </Text>\n                  <Text variant=\"small\" className={styles.versionCount}>\n                    {formattedValue}\n                  </Text>\n                </li>\n              );\n            })}\n            <li key=\"sum\" className={styles.versionsListItem}>\n              <Text variant=\"small\" className={styles.versionLabel}>\n                Total\n              </Text>\n              <Text variant=\"small\" className={styles.versionCount}>\n                {reversedItems\n                  .reduce((prev, curr) => prev + (curr.value || 0), 0)\n                  .toLocaleString()}\n              </Text>\n            </li>\n          </ul>\n        );\n\n        return (\n          <ThemeProvider\n            theme={theme}\n            className={styles.frame}\n            style={{\n              backgroundColor: (theme ?? contextTheme)?.semanticColors\n                .bodyBackground,\n            }}\n          >\n            <Text className={styles.date} variant=\"medium\">\n              {formatLabel(label!)}\n            </Text>\n            {versionsList}\n          </ThemeProvider>\n        );\n      }}\n    </ThemeContext.Consumer>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"versionsListContainer\":\"VersionLegend_versionsListContainer__vCxx0\",\"versionsList\":\"VersionLegend_versionsList__tRQMP\",\"versionsListItem\":\"VersionLegend_versionsListItem__f1GBC\",\"versionColorIndicator\":\"VersionLegend_versionColorIndicator__BpNMr\",\"versionLabel\":\"VersionLegend_versionLabel__FNwLX\"};","import type { Payload } from \"recharts/types/component/DefaultLegendContent\";\nimport styles from \"../styles/VersionLegend.module.scss\";\n\nimport { Text, ThemeContext } from \"@fluentui/react\";\nimport { colorForHue } from \"../chartColor\";\n\ntype VersionLegendProps = {\n  payload: Payload[];\n  versionHues: Record<string, number>;\n  hiddenSeries: string[];\n  setHiddenSeries: React.Dispatch<React.SetStateAction<string[]>>;\n};\n\nconst VersionLegend: React.FC<VersionLegendProps> = ({\n  payload,\n  versionHues,\n  hiddenSeries,\n  setHiddenSeries,\n}) => {\n  return (\n    <ThemeContext.Consumer>\n      {(theme) => (\n        <div className={styles.versionsListContainer}>\n          <ul className={styles.versionsList}>\n            {payload.map(({ value, color }) => {\n              const isHidden = hiddenSeries.includes(value);\n              const colorChipColor = isHidden\n                ? theme?.semanticColors.buttonBackgroundDisabled\n                : theme\n                ? colorForHue(\n                    versionHues[value!],\n                    theme.isInverted\n                      ? { variant: \"dark\", targetLuminance: \"contrasts-dark\" }\n                      : {\n                          variant: \"light\",\n                          targetLuminance: \"contrasts-light\",\n                        }\n                  )\n                : color!;\n\n              return (\n                <li\n                  key={value}\n                  className={styles.versionsListItem}\n                  onClick={() =>\n                    setHiddenSeries(() =>\n                      isHidden\n                        ? hiddenSeries.filter((key: string) => key !== value)\n                        : hiddenSeries.concat(value)\n                    )\n                  }\n                >\n                  <div\n                    className={styles.versionColorIndicator}\n                    style={{ backgroundColor: colorChipColor }}\n                  />\n                  <Text\n                    variant=\"small\"\n                    className={styles.versionLabel}\n                    style={\n                      isHidden\n                        ? { color: theme?.semanticColors.buttonTextDisabled }\n                        : {}\n                    }\n                  >\n                    {value}\n                  </Text>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default VersionLegend;\n","import React, { useState } from \"react\";\n\nimport generateHue, { AvoidToken, colorForHue } from \"../chartColor\";\nimport styleProps from \"../styles/VersionDownloadChart.styles\";\nimport { createTooltipContent } from \"./VersionTooltip\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport type { HistoryPointCollection, HistoryPoint } from \"../HistoryReader\";\nimport { ITheme } from \"@fluentui/react\";\n\nimport { createPortal } from \"react-dom\";\nimport VersionLegend from \"./VersionLegend\";\n\nexport type Unit = \"totalDownloads\" | \"percentage\";\n\nexport type VersionLabeler = (version: string) => string;\n\nexport type VersionDownloadChartProps = {\n  /**\n   * Class wrapping the chart\n   */\n  className?: string;\n\n  /**\n   * Points to render\n   */\n  history?: HistoryPointCollection;\n\n  /**\n   * Maximum duration the graph will show, in days\n   */\n  maxDaysShown?: number;\n\n  /**\n   * Maximum total ticks to show for dates/times\n   */\n  maxTicks?: number;\n\n  /**\n   * The maximum number of \"popular\" versions show (see below).\n   */\n  maxVersionsShown?: number;\n\n  /**\n   * Controls how \"popular\" versions are selected\n   *\n   * \"all\" (Default): Examine and rank all versions that exist in the time-span\n   * shown, ranking by sum of downloads/week measurements\n   *\n   * \"most-recent\": Select versions from the most recent polling-time, ranking\n   * by downloads/week\n   */\n  popularDuring?: \"all\" | \"most-recent\";\n\n  /**\n   * Whether to show the legend (defaults to true)\n   */\n  showLegend?: boolean;\n\n  /**\n   * Whether to show the tooltip (defaults to true)\n   */\n  showTooltip?: boolean;\n\n  /**\n   * The unit to show in the Y axis\n   */\n  unit?: Unit;\n\n  /**\n   * Allows relabeling versions\n   */\n  versionLabeler?: VersionLabeler;\n\n  /**\n   * Theme, used to ensure we have enough contrast.\n   */\n  theme?: ITheme;\n\n  /**\n   * Override the default provided theme for the tooltip\n   */\n  tooltipTheme?: ITheme;\n};\n\nconst VersionDownloadChart: React.FC<VersionDownloadChartProps> = ({\n  className,\n  history,\n  maxDaysShown,\n  maxVersionsShown,\n  popularDuring,\n  maxTicks,\n  showLegend,\n  showTooltip,\n  unit,\n  versionLabeler,\n  theme,\n  tooltipTheme,\n}) => {\n  const styles = styleProps({ theme, unit });\n\n  const [legendElement, setLegendElement] = useState<HTMLDivElement>();\n  const [hiddenSeries, setHiddenSeries] = useState<string[]>([]);\n\n  const filteredHistory = React.useMemo(\n    () =>\n      filterTopN(\n        history,\n        maxVersionsShown ?? 5,\n        maxDaysShown ?? 30,\n        popularDuring\n      ),\n    [history, maxDaysShown, maxVersionsShown, popularDuring]\n  );\n\n  const dateTicks = React.useMemo(\n    () =>\n      !filteredHistory\n        ? []\n        : calculateDateTicks(\n            filteredHistory.points.map((p) => p.date),\n            maxTicks ?? 6\n          ),\n    [filteredHistory, maxTicks]\n  );\n\n  const versionHues = React.useMemo(() => {\n    if (!filteredHistory) {\n      return {};\n    }\n\n    const hues: Record<string, number> = {};\n    let lastAvoidToken: AvoidToken | undefined;\n\n    filteredHistory.versions.forEach((v) => {\n      const { hue, avoidToken } = generateHue(v, lastAvoidToken);\n      lastAvoidToken = avoidToken;\n      hues[versionLabeler ? versionLabeler(v) : v] = hue;\n    });\n\n    return hues;\n  }, [filteredHistory, versionLabeler]);\n\n  const chartAreas = React.useMemo(\n    () =>\n      !filteredHistory\n        ? []\n        : filteredHistory.versions\n            .map((v) => {\n              const name = versionLabeler ? versionLabeler(v) : v;\n              const hue = versionHues[name];\n              const colorVariant = theme?.isInverted ? \"dark\" : \"light\";\n              const fill = colorForHue(hue, {\n                variant: colorVariant,\n                targetLuminance: theme?.isInverted\n                  ? \"contrasts-light\"\n                  : \"contrasts-dark\",\n              });\n              return { name, hue, fill, dataKey: v };\n            })\n            .reverse(),\n    [filteredHistory, theme?.isInverted, versionHues, versionLabeler]\n  );\n\n  return (\n    <div className={className}>\n      <ResponsiveContainer {...styles.responsiveContainer}>\n        <AreaChart\n          {...styles.areaChart}\n          data={filteredHistory?.points}\n          reverseStackOrder\n          stackOffset={unit === \"percentage\" ? \"expand\" : \"none\"}\n        >\n          <XAxis\n            {...styles.xAxis}\n            dataKey=\"date\"\n            type=\"number\"\n            scale=\"time\"\n            domain={[\"dataMin\", \"dataMax\"]}\n            tickFormatter={(unixTime) =>\n              new Date(unixTime).toLocaleDateString(\"en-US\", {\n                month: \"short\",\n                day: \"numeric\",\n              })\n            }\n            interval={0}\n            ticks={dateTicks}\n          />\n          <YAxis\n            {...styles.yAxis}\n            type=\"number\"\n            {...(unit === \"percentage\"\n              ? {\n                  domain: [0, 1],\n                  tickFormatter: (count) => `${Math.round(count * 100)}%`,\n                }\n              : {\n                  domain: [\"auto\", \"auto\"],\n                  tickFormatter: formatDownloadCountTicks,\n                })}\n          />\n\n          {showTooltip !== false && (\n            <Tooltip\n              {...styles.tooltip}\n              content={createTooltipContent({\n                versionHues,\n                unit,\n                theme: tooltipTheme,\n              })}\n            />\n          )}\n          {showLegend !== false && legendElement && (\n            <Legend\n              height={0}\n              content={({ payload }) =>\n                createPortal(\n                  payload && (\n                    <VersionLegend\n                      payload={payload}\n                      versionHues={versionHues}\n                      hiddenSeries={hiddenSeries}\n                      setHiddenSeries={setHiddenSeries}\n                    />\n                  ),\n                  legendElement\n                )\n              }\n            />\n          )}\n\n          {chartAreas.map(({ name, fill, dataKey }) => (\n            <Area\n              {...styles.area}\n              name={name}\n              key={name}\n              dataKey={(datapoint) =>\n                hiddenSeries.includes(\n                  versionLabeler ? versionLabeler(dataKey) : dataKey\n                )\n                  ? undefined\n                  : datapoint.versionCounts[dataKey]\n              }\n              stackId=\"1\"\n              fill={fill}\n              fillOpacity={1}\n            />\n          ))}\n\n          <CartesianGrid {...styles.grid} />\n        </AreaChart>\n      </ResponsiveContainer>\n      <div ref={(el) => setLegendElement(el ?? undefined)} />\n    </div>\n  );\n};\n\nfunction formatDownloadCountTicks(count: number) {\n  if (!count) {\n    return \"\";\n  } else if (count >= 1000000) {\n    return `${(count / 1000000).toLocaleString()} m`;\n  } else if (count >= 1000) {\n    return `${(count / 1000).toLocaleString()} k`;\n  } else {\n    return count.toLocaleString();\n  }\n}\n\nfunction calculateDateTicks(dates: number[], maxTicks: number): number[] {\n  if (maxTicks === 0) {\n    return [];\n  }\n\n  const first = dates[0];\n  const last = dates[dates.length - 1];\n\n  if (maxTicks === 1) {\n    return [first];\n  }\n\n  if (maxTicks === 2) {\n    return [first, last];\n  }\n\n  const dataDuration = last - first;\n  const dayDuration = 24 * 60 * 60 * 1000;\n  const weekDuration = 7 * dayDuration;\n\n  const maxInteriorTicks = maxTicks - 1;\n  let tickInterval = weekDuration;\n  while (Math.floor(dataDuration / tickInterval) > maxInteriorTicks) {\n    tickInterval *= 2;\n  }\n\n  const ticks = new Set([first]);\n  let nextTick = fromDayStart(first, tickInterval);\n\n  for (const date of dates) {\n    if (date >= nextTick) {\n      ticks.add(date);\n      nextTick = fromDayStart(date, tickInterval);\n    }\n  }\n\n  return [...ticks];\n}\n\nfunction fromDayStart(date: number, duration: number): number {\n  const dayStart = new Date(date);\n  dayStart.setHours(0, 0, 0, 0);\n\n  return dayStart.getTime() + duration;\n}\n\nfunction filterTopN(\n  history: HistoryPointCollection | undefined,\n  n: number,\n  windowInDays: number,\n  popularDuring?: \"all\" | \"most-recent\"\n): HistoryPointCollection | undefined {\n  if (!history || history.points.length === 0) {\n    return history;\n  }\n\n  const latestDate = history.points[history.points.length - 1].date;\n  const latestDay = new Date(latestDate).setHours(0, 0, 0, 0);\n  const earliestAllowableDate = latestDay - windowInDays * 24 * 60 * 60 * 1000;\n\n  const popularVersions =\n    popularDuring === \"most-recent\"\n      ? versionsInWindow(history, latestDate)\n      : versionsInWindow(history, earliestAllowableDate);\n\n  const topVersions = new Set(\n    Object.entries(popularVersions)\n      .sort((a, b) => a[1]! - b[1]!)\n      .slice(-n)\n      .map(([version, _count]) => version)\n  );\n\n  const filteredPoints: HistoryPoint[] = [];\n\n  for (const point of history.points) {\n    if (point.date >= earliestAllowableDate) {\n      const topVersionsOnDate = Object.keys(point.versionCounts).filter((v) =>\n        topVersions.has(v)\n      );\n\n      if (topVersionsOnDate.length > 0) {\n        const filteredPoint: HistoryPoint = {\n          date: point.date,\n          versionCounts: {},\n        };\n\n        for (const topVersion of topVersionsOnDate) {\n          filteredPoint.versionCounts[topVersion] =\n            point.versionCounts[topVersion];\n        }\n\n        filteredPoints.push(filteredPoint);\n      }\n    }\n  }\n\n  return {\n    versions: history.versions.filter((v) => topVersions.has(v)),\n    points: filteredPoints,\n  };\n}\n\nfunction versionsInWindow(\n  history: HistoryPointCollection,\n  earliestAllowableDate: number\n): { [version: string]: number | undefined } {\n  const versions: { [version: string]: number | undefined } = {};\n\n  for (const point of history.points) {\n    if (point.date >= earliestAllowableDate) {\n      for (const [version, count] of Object.entries(point.versionCounts)) {\n        const existingCount = versions[version] ?? 0;\n        versions[version] = existingCount + count!;\n      }\n    }\n  }\n\n  return versions;\n}\n\nexport default VersionDownloadChart;\n"],"names":["styles","minLuminance","maxLuminance","saturation","defaultLightness","colorCache","colorForHue","hue","opts","cacheEntry","record","targetLuminance","variant","result","lightness","h","s","contrastingColor","relativeLuminance","adjustLightnessForContrast","push","hueDifference","hue1","hue2","dist","Math","abs","l","r","g","b","c","x","m","r1","g1","b1","round","hsl2rgb","standardToLinear","pow","theme","unit","areaChart","margin","top","right","bottom","area","isAnimationActive","stroke","isInverted","palette","whiteTranslucent40","blackTranslucent40","responsiveContainer","width","height","grid","strokeDasharray","xAxis","tickLine","tickSize","tickMargin","tick","fill","semanticColors","bodyText","yAxis","tickCount","tooltip","animationDuration","animationEasing","offset","VersionTooltipContent","label","payload","versionHues","reversedItems","reverse","ThemeContext","contextTheme","versionsList","length","className","map","entry","i","colorChipColor","name","color","formattedValue","count","measurementTransform","versionCounts","pct","Object","values","reduce","a","toLocaleString","formatCount","value","Text","style","prev","curr","ThemeProvider","backgroundColor","bodyBackground","unixTime","Date","toLocaleDateString","month","day","hiddenSeries","setHiddenSeries","isHidden","includes","buttonBackgroundDisabled","onClick","filter","key","concat","buttonTextDisabled","formatDownloadCountTicks","fromDayStart","date","duration","dayStart","setHours","getTime","versionsInWindow","history","earliestAllowableDate","versions","point","points","version","entries","existingCount","maxDaysShown","maxVersionsShown","popularDuring","maxTicks","showLegend","showTooltip","versionLabeler","tooltipTheme","styleProps","legendElement","setLegendElement","useState","filteredHistory","React","n","windowInDays","latestDate","popularVersions","topVersions","Set","sort","slice","_count","filteredPoints","topVersionsOnDate","keys","v","has","filteredPoint","topVersion","filterTopN","dateTicks","dates","first","last","dataDuration","maxInteriorTicks","tickInterval","floor","ticks","nextTick","add","calculateDateTicks","p","hues","lastAvoidToken","forEach","avoidToken","rand","seedRandom","difference","triesLeft","nextHue","adjacentHue","undefined","adjacentHue2","nextHueDifference","otherHue","allHues","differenceToOther","generateHue","chartAreas","dataKey","ResponsiveContainer","AreaChart","data","reverseStackOrder","stackOffset","XAxis","type","scale","domain","tickFormatter","interval","YAxis","Tooltip","content","props","tooltipProps","Legend","createPortal","Area","datapoint","stackId","fillOpacity","CartesianGrid","ref","el"],"sourceRoot":""}